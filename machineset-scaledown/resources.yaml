---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machineset-scaler
  namespace: summit-connect-2025
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: machineset-scaler
rules:
  - apiGroups: ["machine.openshift.io"]
    resources: ["machinesets", "machinesets/scale"]
    verbs: ["get", "list", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: machineset-scaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: machineset-scaler
subjects:
  - kind: ServiceAccount
    name: machineset-scaler
    namespace: summit-connect-2025
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gpu-machineset-scaledown
  namespace: summit-connect-2025
spec:
  schedule: "0 20 * * *"  # 8 PM daily
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: machineset-scaler
          restartPolicy: OnFailure
          containers:
            - name: scaler
              image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
              command:
                - /bin/bash
                - -c
                - |
                  echo "Scaling down GPU machinesets to 0..."
                  oc scale $(oc get machineset -n openshift-machine-api -o name | grep gpu) --replicas=0 -n openshift-machine-api
                  
                  echo "Scaling down worker machinesets to 1..."
                  oc scale $(oc get machineset -n openshift-machine-api -o name | grep worker | grep -v gpu) --replicas=1 -n openshift-machine-api
                  
                  echo "Done!"